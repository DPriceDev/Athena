name: Unit Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_TYPE: RelWithDebInfo

  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

defaults:
  run:
    shell: bash

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: cache-conan-modules
      with:
        path: |
          ${{ env.CONAN_USER_HOME }}
          ~/.cache/pip
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}

    # setup build directory
    - name: Create Build Environment
      run: cmake -E make_directory ./build

      # install conan
    - name: Install conan
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install conan
        source ~/.profile

    - name: Configure CMake
      run: |
        source ~/.profile
        cmake -S . -B ./build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      # build the libraries
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build ./build --config $BUILD_TYPE

    # Run Tests
    - name: Test
      working-directory: ./build
      shell: bash
      run: ctest -C $BUILD_TYPE